PG110607A:

	Initial archive. I am still not sure whether I will spend any time on
	this, but it doesn't hurt to start.

	The initial archive, to the best of my memory, is the original version
	2.2 + a simple modification in ex.c (look for PGPGPG) disabling the
	security check inhibiting split.

PG110607B:

	Changed FT_FILE (an enum item) in guix11 to FT_ZFILE (it collided with
	some fonts-related includes).

	Eliminated superfluous (and erroneous) attempts to internally expand
	file names appearing as call arguments.

	SA_INTERRUPT is not defined under Cygwin, which was causing compilation
	errors.

	Fixed configure to use curses (instead of termcap) with Cygwin.

	Fixed Makefile.in to remove ctags on clean.

	My version of elvis.x11 moved to data/ and made official. A couple of
	other (suggested) files added there as well.

PG110608A:

	Added option -m which produces on standard output the trace of file
	status in the following format:

		BST: d [filename]

	where d is 0 or 1 (for clean and modified, respectively) and filename.
	This is intended for scenarios where elvis is called from a program
	which wants to know the file status.

PG110610A:

	Configured in the FEATURE_RAM option allowing you to use RAM buffers
	with -f ram. This is very useful when working with PicOS SDA as it
	allows the script to just kill the editor without having to worry about
	the leftover buffer file.

	I have tried to make sure that when operating with -m (see above)
	Elvis never writes anything to stderr (using stdout instead), as that
	would be interpreted as an error by the Tcl pipe.

	With -m the editor also reports its process ID, which allows the Tcl
	script monitoring it to kill the process.

PG111014A:

	The -m option extended to monitor the input end (stdin) of the pipe.
	Whatever shows up there is interpreted as an ex command. The idea is
	to allow the PicOS SDA (called PIP from now on) to reposition files
	in response to ctags clicks (to do: ctags clicks with -m should be
	sent to stdout) and, possibly, some other exotic events.

	Note: for now, the ex command arriving this way is ignored if there's
	no window in the session (there can be multiple windows) that is in the
	straightforward "command" mode, e.g., as opposed to the "insert" mode
	(where repositioning the window spontaneously would mess up things).

	I have made sure (or so I think) that a session started with -m doesn't
	set the server property for its windows, which means that no other
	edit session will try to connect to it. In other words, a session
	started with -m is truly stand-alone and independent.

PG111018A:

	I think I have improved a bit the way the window is raised after its
	repositioning by an ex command from stdin (with -m). Now I am clearing
	the override_redirect attribute of the frame window and raising the
	frame window (as opposed to the window itself). It seems to work under
	Linux (Ubuntu), but not under Cygwin.
